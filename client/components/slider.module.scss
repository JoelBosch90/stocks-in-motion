/**
 *  This file contains all styling that is specific to the slider component.
 */

.slider
{
  // Make sure we can position our sidescroll buttons absolutely inside this 
  // container.
  position: relative;
  
  // Make sure that nothing escapes the container.
  overflow: hidden;

  // Use all space available. This makes the parent component responsible for
  // setting the dimensions.
  height: 100%;
  width: 100%;

  .scrollContainer
  {
    // Use Flexbox to create a simple single column layout.
    display: inline-flex;
    flex-direction: row;
    flex-wrap: nowrap;
  
    // Keep a little bit of space between slides.
    gap: 0.25em;
    
    // We want to use a CSS variable to set the amount of scrolling we need to
    // do as we can easily change this is JavaScript.
    --scrollAmount: 0px;

    // Transform across the x-axis by default.
    transform: translateX(var(--scrollAmount));

    // Animate the scrolling.
    transition-timing-function: ease-in-out;
    transition-duration: 350ms;
    transition-property: transform;
  }

  button
  {
    // Position these sidescroll buttons on top of the slides.
    position: absolute;

    // Make sure that the buttons overlap the container.
    top: 0;

    // Take up the full height.
    height: 100%;

    // Get rid of the default borders.
    border: none;

    // Make the buttons completely transparent by default.
    opacity: 0;

    // Show thick white buttons.
    color: white;
    font-weight: bold;

    // Give the buttons a dark, but transparent look.
    background-color: hsla(0, 0, 0, 0.1);

    // Show the user that these buttons are clickable.
    cursor: pointer;

    // Position each button on the appropriate side according to their class.
    &.start { left: 0; }
    &.end { right: 0; }

    // Make the buttons appear on hover.
    &:hover { opacity: 1; }
  }

  &.column
  {
    .scroll-container
    {
      // Also allow for a column layout using a special class.
      flex-direction: column;

      // Transform across the y-axis in column mode.
      transform: translateY(var(--scrollAmount));
    }

    button
    {
      // Make sure that the buttons still overlap the container.
      left: 0;
      
      // Position each button on the appropriate side according to their class.
      &.start { top: 0; }
      &.end { bottom: 0; }
    }
  }
}